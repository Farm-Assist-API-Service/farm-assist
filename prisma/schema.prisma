// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  // previewFeatures = ["mongodb"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id         String       @id @default(auto()) @map("_id") @db.ObjectId
  isVerified Boolean      @default(false)
  banned     Boolean      @default(false)
  firstName  String
  middleName String
  lastName   String
  email      String       @unique
  gender     String?
  password   String
  phone      String?
  role       String       @default("normal")
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  sourceInfo SourceInfo[]
  farm       Farm?
}

model SourceInfo {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
  userId    String   @db.ObjectId
  ip        String
  referrer  String
  userAgent String
  createdAt DateTime @default(now())
}

model Farm {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  banned      Boolean   @default(false)
  isVerified  Boolean   @default(false)
  user        User      @relation(references: [id], fields: [userId], onDelete: Cascade)
  userId      String    @unique @db.ObjectId
  slug        String?    @unique
  name        String    @unique
  ownerName   String
  contact     String
  // size        Int
  products    Product[]
  address     Address?
  description String
  category    String
}

model Address {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  farm       Farm     @relation(references: [id], fields: [farmId], onDelete: Cascade)
  farmId     String   @unique @db.ObjectId
  street     String
  city       String
  state      String
  country    String
  postalCode String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Product {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  farm        Farm     @relation(references: [id], fields: [farmId], onDelete: Cascade)
  farmId      String   @db.ObjectId
  price       Int
  qty         Int
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Tasks {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
